{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { getPokemonDetails } from \"../api/pokeAPI\";\nimport { styles } from \"../styles/DetailScreen\";\nimport { capitalizeFirstLetter, formatWeight } from \"../utils/helper\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar DetailScreen = function DetailScreen(_ref) {\n  var route = _ref.route;\n  var name = route.params.name;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    pokemon = _useState2[0],\n    setPokemon = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  useEffect(function () {\n    var fetchPokemonDetails = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        setLoading(true);\n        try {\n          var data = yield getPokemonDetails(name);\n          setPokemon(data);\n        } catch (error) {\n          console.error(error);\n        } finally {\n          setLoading(false);\n        }\n      });\n      return function fetchPokemonDetails() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    fetchPokemonDetails();\n  }, [name]);\n  if (loading) {\n    return _jsx(Text, {\n      children: \"Chargement...\"\n    });\n  }\n  if (!pokemon) {\n    return _jsx(Text, {\n      children: \"Pokemon introuvable\"\n    });\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Image, {\n      source: {\n        uri: pokemon.sprites.front_default\n      },\n      style: styles.sprite\n    }), _jsx(Text, {\n      children: capitalizeFirstLetter(pokemon.name)\n    }), _jsxs(Text, {\n      children: [\"#\", pokemon.id]\n    }), _jsxs(Text, {\n      children: [\"Type: \", capitalizeFirstLetter(pokemon.types.map(function (t) {\n        return t.type.name;\n      }).join(', '))]\n    }), _jsxs(Text, {\n      children: [\"Poids: \", formatWeight(pokemon.weight)]\n    })]\n  });\n};\nexport default DetailScreen;","map":{"version":3,"names":["React","useEffect","useState","View","Text","Image","getPokemonDetails","styles","capitalizeFirstLetter","formatWeight","jsx","_jsx","jsxs","_jsxs","DetailScreen","_ref","route","name","params","_useState","_useState2","_slicedToArray","pokemon","setPokemon","_useState3","_useState4","loading","setLoading","fetchPokemonDetails","_ref2","_asyncToGenerator","data","error","console","apply","arguments","children","style","container","source","uri","sprites","front_default","sprite","id","types","map","t","type","join","weight"],"sources":["/Users/valentinbour/Desktop/Git/comin-TestTechnique/src/screens/DetailScreen.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { View, Text, Image, ActivityIndicator } from 'react-native';\nimport { RouteProp } from '@react-navigation/native';\nimport { RootStackParamList } from '../def'; // Assurez-vous que le chemin d'importation est correct\nimport { getPokemonDetails } from '../api/pokeAPI';\nimport {styles} from '../styles/DetailScreen';\nimport { capitalizeFirstLetter, formatWeight } from '../utils/helper';\n\ntype DetailScreenRouteProp = RouteProp<RootStackParamList, 'DetailScreen'>;\n\ntype DetailScreenProps = {\n  route: DetailScreenRouteProp;\n};\n\ninterface PokemonDetail {\n    name: string;\n    id: number;\n    types: { type: { name: string } }[];\n    weight: number;\n    sprites: {\n        front_default: string;\n    };\n}\n\nconst DetailScreen: React.FC<DetailScreenProps> = ({ route }) => {\n  const { name } = route.params;\n  const [pokemon, setPokemon] = useState<PokemonDetail | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchPokemonDetails = async () => {\n      setLoading(true);\n      try {\n        const data: PokemonDetail = await getPokemonDetails(name);\n        setPokemon(data);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n  \n    fetchPokemonDetails();\n  }, [name]);\n\n  if (loading) {\n    return <Text>Chargement...</Text>;\n  }\n\n  if (!pokemon) {\n    return <Text>Pokemon introuvable</Text>;\n  }\n\n  return (\n    <View style={styles.container}>\n      <Image source={{ uri: pokemon.sprites.front_default }} style={styles.sprite} />\n      <Text>{capitalizeFirstLetter(pokemon.name)}</Text>\n      <Text>#{pokemon.id}</Text>\n      <Text>Type: {capitalizeFirstLetter(pokemon.types.map(t => t.type.name).join(', '))}</Text>\n      <Text>Poids: {formatWeight(pokemon.weight)}</Text>\n    </View>\n  );\n};\n\nexport default DetailScreen;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAInD,SAASC,iBAAiB;AAC1B,SAAQC,MAAM;AACd,SAASC,qBAAqB,EAAEC,YAAY;AAA0B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAkBtE,IAAMC,YAAyC,GAAG,SAA5CA,YAAyCA,CAAAC,IAAA,EAAkB;EAAA,IAAZC,KAAK,GAAAD,IAAA,CAALC,KAAK;EACxD,IAAQC,IAAI,GAAKD,KAAK,CAACE,MAAM,CAArBD,IAAI;EACZ,IAAAE,SAAA,GAA8BjB,QAAQ,CAAuB,IAAI,CAAC;IAAAkB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA3DG,OAAO,GAAAF,UAAA;IAAEG,UAAU,GAAAH,UAAA;EAC1B,IAAAI,UAAA,GAA8BtB,QAAQ,CAAC,IAAI,CAAC;IAAAuB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAArCE,OAAO,GAAAD,UAAA;IAAEE,UAAU,GAAAF,UAAA;EAE1BxB,SAAS,CAAC,YAAM;IACd,IAAM2B,mBAAmB;MAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAG,aAAY;QACtCH,UAAU,CAAC,IAAI,CAAC;QAChB,IAAI;UACF,IAAMI,IAAmB,SAASzB,iBAAiB,CAACW,IAAI,CAAC;UACzDM,UAAU,CAACQ,IAAI,CAAC;QAClB,CAAC,CAAC,OAAOC,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;QACtB,CAAC,SAAS;UACRL,UAAU,CAAC,KAAK,CAAC;QACnB;MACF,CAAC;MAAA,gBAVKC,mBAAmBA,CAAA;QAAA,OAAAC,KAAA,CAAAK,KAAA,OAAAC,SAAA;MAAA;IAAA,GAUxB;IAEDP,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,CAACX,IAAI,CAAC,CAAC;EAEV,IAAIS,OAAO,EAAE;IACX,OAAOf,IAAA,CAACP,IAAI;MAAAgC,QAAA,EAAC;IAAa,CAAM,CAAC;EACnC;EAEA,IAAI,CAACd,OAAO,EAAE;IACZ,OAAOX,IAAA,CAACP,IAAI;MAAAgC,QAAA,EAAC;IAAmB,CAAM,CAAC;EACzC;EAEA,OACEvB,KAAA,CAACV,IAAI;IAACkC,KAAK,EAAE9B,MAAM,CAAC+B,SAAU;IAAAF,QAAA,GAC5BzB,IAAA,CAACN,KAAK;MAACkC,MAAM,EAAE;QAAEC,GAAG,EAAElB,OAAO,CAACmB,OAAO,CAACC;MAAc,CAAE;MAACL,KAAK,EAAE9B,MAAM,CAACoC;IAAO,CAAE,CAAC,EAC/EhC,IAAA,CAACP,IAAI;MAAAgC,QAAA,EAAE5B,qBAAqB,CAACc,OAAO,CAACL,IAAI;IAAC,CAAO,CAAC,EAClDJ,KAAA,CAACT,IAAI;MAAAgC,QAAA,GAAC,GAAC,EAACd,OAAO,CAACsB,EAAE;IAAA,CAAO,CAAC,EAC1B/B,KAAA,CAACT,IAAI;MAAAgC,QAAA,GAAC,QAAM,EAAC5B,qBAAqB,CAACc,OAAO,CAACuB,KAAK,CAACC,GAAG,CAAC,UAAAC,CAAC;QAAA,OAAIA,CAAC,CAACC,IAAI,CAAC/B,IAAI;MAAA,EAAC,CAACgC,IAAI,CAAC,IAAI,CAAC,CAAC;IAAA,CAAO,CAAC,EAC1FpC,KAAA,CAACT,IAAI;MAAAgC,QAAA,GAAC,SAAO,EAAC3B,YAAY,CAACa,OAAO,CAAC4B,MAAM,CAAC;IAAA,CAAO,CAAC;EAAA,CAC9C,CAAC;AAEX,CAAC;AAED,eAAepC,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}