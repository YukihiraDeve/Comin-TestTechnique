{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { useNavigation } from '@react-navigation/native';\nimport { getPokemonList } from \"../api/pokeAPI\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar HomeScreen = function HomeScreen() {\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    loading = _useState2[0],\n    setLoading = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    pokemons = _useState4[0],\n    setPokemons = _useState4[1];\n  var navigation = useNavigation();\n  useEffect(function () {\n    var fetchPokemon = function () {\n      var _ref = _asyncToGenerator(function* () {\n        setLoading(true);\n        try {\n          var data = yield getPokemonList();\n          setPokemons(data.results);\n        } catch (error) {\n          console.error(error);\n        } finally {\n          setLoading(false);\n        }\n      });\n      return function fetchPokemon() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    fetchPokemon();\n  }, []);\n  var renderPokemon = function renderPokemon(_ref2) {\n    var item = _ref2.item;\n    return _jsx(TouchableOpacity, {\n      style: {\n        padding: 20,\n        borderBottomWidth: 1,\n        borderBottomColor: '#ccc'\n      },\n      onPress: function onPress() {\n        return navigation.navigate('DetailScreen', {\n          name: item.name\n        });\n      },\n      children: _jsx(Text, {\n        children: item.name\n      })\n    });\n  };\n  if (loading) {\n    return _jsx(ActivityIndicator, {\n      size: \"large\",\n      color: \"#0000ff\"\n    });\n  }\n  return _jsx(View, {\n    children: _jsx(FlatList, {\n      data: pokemons,\n      renderItem: renderPokemon,\n      keyExtractor: function keyExtractor(item) {\n        return item.name;\n      }\n    })\n  });\n};\nexport default HomeScreen;","map":{"version":3,"names":["React","useState","useEffect","FlatList","Text","TouchableOpacity","View","ActivityIndicator","useNavigation","getPokemonList","jsx","_jsx","HomeScreen","_useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","pokemons","setPokemons","navigation","fetchPokemon","_ref","_asyncToGenerator","data","results","error","console","apply","arguments","renderPokemon","_ref2","item","style","padding","borderBottomWidth","borderBottomColor","onPress","navigate","name","children","size","color","renderItem","keyExtractor"],"sources":["/Users/valentinbour/Desktop/Git/comin-TestTechnique/src/screens/HomeScreen.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { FlatList, Text, TouchableOpacity, View, ActivityIndicator } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { getPokemonList } from '../api/pokeAPI';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport { RootStackParamList } from '../def';\n\n\n// DÃ©finissez le type de navigation pour votre Stack\ntype HomeScreenNavigationProp = StackNavigationProp<\n  RootStackParamList,\n  'HomeScreen'\n>;\n\nconst HomeScreen = () => {\n  const [loading, setLoading] = useState(true);\n  const [pokemons, setPokemons] = useState([]);\n  \n  // Utilisez le type de navigation ici\n  const navigation = useNavigation<HomeScreenNavigationProp>();\n\n  useEffect(() => {\n    const fetchPokemon = async () => {\n      setLoading(true);\n      try {\n        const data = await getPokemonList();\n        setPokemons(data.results);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchPokemon();\n  }, []);\n\n  const renderPokemon = ({ item }) => (\n    <TouchableOpacity \n      style={{ padding: 20, borderBottomWidth: 1, borderBottomColor: '#ccc' }}\n      onPress={() => navigation.navigate('DetailScreen', { name: item.name })}\n    >\n      <Text>{item.name}</Text>\n    </TouchableOpacity>\n  );\n\n  if (loading) {\n    return <ActivityIndicator size=\"large\" color=\"#0000ff\" />;\n  }\n\n  return (\n    <View>\n      <FlatList\n        data={pokemons}\n        renderItem={renderPokemon}\n        keyExtractor={item => item.name}\n      />\n    </View>\n  );\n};\n\nexport default HomeScreen;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,QAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,iBAAA;AAEnD,SAASC,aAAa,QAAQ,0BAA0B;AACxD,SAASC,cAAc;AAAyB,SAAAC,GAAA,IAAAC,IAAA;AAWhD,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;EACvB,IAAAC,SAAA,GAA8BZ,QAAQ,CAAC,IAAI,CAAC;IAAAa,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAArCG,OAAO,GAAAF,UAAA;IAAEG,UAAU,GAAAH,UAAA;EAC1B,IAAAI,UAAA,GAAgCjB,QAAQ,CAAC,EAAE,CAAC;IAAAkB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAArCE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAG5B,IAAMG,UAAU,GAAGd,aAAa,CAA2B,CAAC;EAE5DN,SAAS,CAAC,YAAM;IACd,IAAMqB,YAAY;MAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;QAC/BR,UAAU,CAAC,IAAI,CAAC;QAChB,IAAI;UACF,IAAMS,IAAI,SAASjB,cAAc,CAAC,CAAC;UACnCY,WAAW,CAACK,IAAI,CAACC,OAAO,CAAC;QAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;QACtB,CAAC,SAAS;UACRX,UAAU,CAAC,KAAK,CAAC;QACnB;MACF,CAAC;MAAA,gBAVKM,YAAYA,CAAA;QAAA,OAAAC,IAAA,CAAAM,KAAA,OAAAC,SAAA;MAAA;IAAA,GAUjB;IAEDR,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMS,aAAa,GAAG,SAAhBA,aAAaA,CAAAC,KAAA;IAAA,IAAMC,IAAI,GAAAD,KAAA,CAAJC,IAAI;IAAA,OAC3BvB,IAAA,CAACN,gBAAgB;MACf8B,KAAK,EAAE;QAAEC,OAAO,EAAE,EAAE;QAAEC,iBAAiB,EAAE,CAAC;QAAEC,iBAAiB,EAAE;MAAO,CAAE;MACxEC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMjB,UAAU,CAACkB,QAAQ,CAAC,cAAc,EAAE;UAAEC,IAAI,EAAEP,IAAI,CAACO;QAAK,CAAC,CAAC;MAAA,CAAC;MAAAC,QAAA,EAExE/B,IAAA,CAACP,IAAI;QAAAsC,QAAA,EAAER,IAAI,CAACO;MAAI,CAAO;IAAC,CACR,CAAC;EAAA,CACpB;EAED,IAAIzB,OAAO,EAAE;IACX,OAAOL,IAAA,CAACJ,iBAAiB;MAACoC,IAAI,EAAC,OAAO;MAACC,KAAK,EAAC;IAAS,CAAE,CAAC;EAC3D;EAEA,OACEjC,IAAA,CAACL,IAAI;IAAAoC,QAAA,EACH/B,IAAA,CAACR,QAAQ;MACPuB,IAAI,EAAEN,QAAS;MACfyB,UAAU,EAAEb,aAAc;MAC1Bc,YAAY,EAAE,SAAAA,aAAAZ,IAAI;QAAA,OAAIA,IAAI,CAACO,IAAI;MAAA;IAAC,CACjC;EAAC,CACE,CAAC;AAEX,CAAC;AAED,eAAe7B,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}