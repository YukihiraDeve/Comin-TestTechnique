{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nvar BASE_URL = 'https://pokeapi.co/api/v2';\nexport var getPokemonList = function () {\n  var _ref = _asyncToGenerator(function* () {\n    var limit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 20;\n    var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    try {\n      var response = yield fetch(`${BASE_URL}/pokemon?limit=${limit}&offset=${offset}`);\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return yield response.json();\n    } catch (error) {\n      console.error('Could not fetch Pokémon list:', error);\n      throw error;\n    }\n  });\n  return function getPokemonList() {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var getPokemonDetails = function () {\n  var _ref2 = _asyncToGenerator(function* (name) {\n    try {\n      var response = yield fetch(`${BASE_URL}/pokemon/${name}`);\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return yield response.json();\n    } catch (error) {\n      console.error(`Could not fetch details of Pokémon ${name}:`, error);\n      throw error;\n    }\n  });\n  return function getPokemonDetails(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var getPokemonByName = function () {\n  var _ref3 = _asyncToGenerator(function* (name) {\n    var url = `https://pokeapi.co/api/v2/pokemon/${name}`;\n    try {\n      var response = yield fetch(url);\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      var pokemonData = yield response.json();\n      return pokemonData;\n    } catch (error) {\n      console.error('Error fetching data: ', error);\n      throw error;\n    }\n  });\n  return function getPokemonByName(_x2) {\n    return _ref3.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["BASE_URL","getPokemonList","_ref","_asyncToGenerator","limit","arguments","length","undefined","offset","response","fetch","ok","Error","json","error","console","apply","getPokemonDetails","_ref2","name","_x","getPokemonByName","_ref3","url","pokemonData","_x2"],"sources":["/Users/valentinbour/Desktop/Git/comin-TestTechnique/src/api/pokeAPI.ts"],"sourcesContent":["const BASE_URL = 'https://pokeapi.co/api/v2';\n\n// Fonction pour obtenir une liste de Pokémon\nexport const getPokemonList = async (limit: number = 20, offset: number = 0) => {\n  try {\n    const response = await fetch(`${BASE_URL}/pokemon?limit=${limit}&offset=${offset}`);\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Could not fetch Pokémon list:', error);\n    throw error;\n  }\n};\n\n// Fonction pour obtenir les détails d'un Pokémon spécifique\nexport const getPokemonDetails = async (name: string) => {\n  try {\n    const response = await fetch(`${BASE_URL}/pokemon/${name}`);\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(`Could not fetch details of Pokémon ${name}:`, error);\n    throw error;\n  }\n};\n\nexport const getPokemonByName = async (name: string) => {\n    const url = `https://pokeapi.co/api/v2/pokemon/${name}`;\n    try {\n      const response = await fetch(url);\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const pokemonData = await response.json();\n      return pokemonData;\n    } catch (error) {\n      console.error('Error fetching data: ', error);\n      throw error;\n    }\n  };\n\n"],"mappings":";AAAA,IAAMA,QAAQ,GAAG,2BAA2B;AAG5C,OAAO,IAAMC,cAAc;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAkD;IAAA,IAA3CC,KAAa,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;IAAA,IAAEG,MAAc,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;IACzE,IAAI;MACF,IAAMI,QAAQ,SAASC,KAAK,CAAE,GAAEV,QAAS,kBAAiBI,KAAM,WAAUI,MAAO,EAAC,CAAC;MACnF,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,aAAaH,QAAQ,CAACI,IAAI,CAAC,CAAC;IAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrD,MAAMA,KAAK;IACb;EACF,CAAC;EAAA,gBAXYb,cAAcA,CAAA;IAAA,OAAAC,IAAA,CAAAc,KAAA,OAAAX,SAAA;EAAA;AAAA,GAW1B;AAGD,OAAO,IAAMY,iBAAiB;EAAA,IAAAC,KAAA,GAAAf,iBAAA,CAAG,WAAOgB,IAAY,EAAK;IACvD,IAAI;MACF,IAAMV,QAAQ,SAASC,KAAK,CAAE,GAAEV,QAAS,YAAWmB,IAAK,EAAC,CAAC;MAC3D,IAAI,CAACV,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,aAAaH,QAAQ,CAACI,IAAI,CAAC,CAAC;IAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAE,sCAAqCK,IAAK,GAAE,EAAEL,KAAK,CAAC;MACnE,MAAMA,KAAK;IACb;EACF,CAAC;EAAA,gBAXYG,iBAAiBA,CAAAG,EAAA;IAAA,OAAAF,KAAA,CAAAF,KAAA,OAAAX,SAAA;EAAA;AAAA,GAW7B;AAED,OAAO,IAAMgB,gBAAgB;EAAA,IAAAC,KAAA,GAAAnB,iBAAA,CAAG,WAAOgB,IAAY,EAAK;IACpD,IAAMI,GAAG,GAAI,qCAAoCJ,IAAK,EAAC;IACvD,IAAI;MACF,IAAMV,QAAQ,SAASC,KAAK,CAACa,GAAG,CAAC;MACjC,IAAI,CAACd,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,IAAMY,WAAW,SAASf,QAAQ,CAACI,IAAI,CAAC,CAAC;MACzC,OAAOW,WAAW;IACpB,CAAC,CAAC,OAAOV,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C,MAAMA,KAAK;IACb;EACF,CAAC;EAAA,gBAbUO,gBAAgBA,CAAAI,GAAA;IAAA,OAAAH,KAAA,CAAAN,KAAA,OAAAX,SAAA;EAAA;AAAA,GAa1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}