{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { useNavigation } from '@react-navigation/native';\nimport { getPokemonList, getPokemonDetails } from \"../api/pokeAPI\";\nimport { styles } from \"../styles/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar HomeScreen = function HomeScreen() {\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    loading = _useState2[0],\n    setLoading = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    pokemons = _useState4[0],\n    setPokemons = _useState4[1];\n  var navigation = useNavigation();\n  useEffect(function () {\n    var fetchPokemon = function () {\n      var _ref = _asyncToGenerator(function* () {\n        setLoading(true);\n        try {\n          var data = yield getPokemonList();\n          var detailedPokemons = yield Promise.all(data.results.map(function () {\n            var _ref2 = _asyncToGenerator(function* (pokemon) {\n              var details = yield getPokemonDetails(pokemon.name);\n              return _objectSpread(_objectSpread({}, pokemon), {}, {\n                spriteURL: details.sprites.front_default\n              });\n            });\n            return function (_x) {\n              return _ref2.apply(this, arguments);\n            };\n          }()));\n          setPokemons(detailedPokemons);\n        } catch (error) {\n          console.error(error);\n        } finally {\n          setLoading(false);\n        }\n      });\n      return function fetchPokemon() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    fetchPokemon();\n  }, []);\n  var renderPokemon = function renderPokemon(_ref3) {\n    var item = _ref3.item,\n      index = _ref3.index;\n    return _jsxs(TouchableOpacity, {\n      style: styles.itemContainer,\n      onPress: function onPress() {\n        return navigation.navigate('DetailScreen', {\n          name: item.name\n        });\n      },\n      children: [_jsx(Image, {\n        source: {\n          uri: item.spriteURL\n        },\n        style: styles.sprite\n      }), _jsxs(Text, {\n        children: [\"Number: \", index + 1]\n      }), _jsx(Text, {\n        children: item.name\n      })]\n    });\n  };\n  if (loading) {\n    return _jsx(ActivityIndicator, {\n      size: \"large\",\n      color: \"#0000ff\"\n    });\n  }\n  return _jsx(View, {\n    children: _jsx(FlatList, {\n      data: pokemons,\n      renderItem: renderPokemon,\n      keyExtractor: function keyExtractor(item) {\n        return item.name;\n      },\n      numColumns: 3,\n      columnWrapperStyle: {\n        justifyContent: 'space-between'\n      }\n    })\n  });\n};\nexport default HomeScreen;","map":{"version":3,"names":["React","useState","useEffect","FlatList","Text","TouchableOpacity","View","ActivityIndicator","useNavigation","getPokemonList","getPokemonDetails","styles","Image","jsx","_jsx","jsxs","_jsxs","HomeScreen","_useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","pokemons","setPokemons","navigation","fetchPokemon","_ref","_asyncToGenerator","data","detailedPokemons","Promise","all","results","map","_ref2","pokemon","details","name","_objectSpread","spriteURL","sprites","front_default","_x","apply","arguments","error","console","renderPokemon","_ref3","item","index","style","itemContainer","onPress","navigate","children","source","uri","sprite","size","color","renderItem","keyExtractor","numColumns","columnWrapperStyle","justifyContent"],"sources":["/Users/valentinbour/Desktop/Git/comin-TestTechnique/src/screens/HomeScreen.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { FlatList, Text, TouchableOpacity, View, ActivityIndicator } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { getPokemonList, getPokemonDetails } from '../api/pokeAPI';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport { RootStackParamList } from '../def';\nimport {styles} from '../styles/StyleSheet'\nimport { Image } from 'react-native';\n\n\ninterface Pokemon {\n    name: string;\n    url: string;\n    spriteURL?: string;\n}\n\n  interface PokemonListResponse {\n    results: Pokemon[];\n  }\n\n\ntype HomeScreenNavigationProp = StackNavigationProp<\n  RootStackParamList,\n  'HomeScreen'\n>;\n\nconst HomeScreen = () => {\n  const [loading, setLoading] = useState(true);\n  const [pokemons, setPokemons] = useState<Pokemon[]>([]);\n  \n  const navigation = useNavigation<HomeScreenNavigationProp>();\n\n\n\n  useEffect(() => {\n    const fetchPokemon = async () => {\n      setLoading(true);\n      try {\n        const data: PokemonListResponse = await getPokemonList();\n        const detailedPokemons = await Promise.all(data.results.map(async (pokemon) => {\n          const details = await getPokemonDetails(pokemon.name);\n          return {\n            ...pokemon,\n            spriteURL: details.sprites.front_default\n          };\n        }));\n        setPokemons(detailedPokemons);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n  \n    fetchPokemon();\n  }, []);\n\n  const renderPokemon = ({ item, index }) => (\n    <TouchableOpacity \n      style={styles.itemContainer}\n      onPress={() => navigation.navigate('DetailScreen', { name: item.name })}\n    >\n      <Image source={{ uri: item.spriteURL }} style={styles.sprite} />\n      <Text>Number: {index + 1}</Text>\n      <Text>{item.name}</Text>\n    </TouchableOpacity>\n  );\n\n  \n\n  if (loading) {\n    return <ActivityIndicator size=\"large\" color=\"#0000ff\" />;\n  }\n\n  return (\n    <View>\n        <FlatList\n        data={pokemons}\n        renderItem={renderPokemon}\n        keyExtractor={item => item.name}\n        numColumns={3}\n        columnWrapperStyle={{ justifyContent: 'space-between' }}\n        />\n    </View>\n  );\n};\n\nexport default HomeScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}