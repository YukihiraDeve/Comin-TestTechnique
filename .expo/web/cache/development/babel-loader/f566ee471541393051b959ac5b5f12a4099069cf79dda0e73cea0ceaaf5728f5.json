{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nvar BASE_URL = 'https://pokeapi.co/api/v2';\nexport var getPokemonList = function () {\n  var _ref = _asyncToGenerator(function* () {\n    var limit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 20;\n    var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    try {\n      var response = yield fetch(`${BASE_URL}/pokemon?limit=${limit}&offset=${offset}`);\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      var data = yield response.json();\n      var pokemonWithSprites = yield Promise.all(data.results.map(function () {\n        var _ref2 = _asyncToGenerator(function* (pokemon) {\n          var details = yield getPokemonDetails(pokemon.name);\n          return _objectSpread(_objectSpread({}, pokemon), {}, {\n            sprite: details.sprites.front_default\n          });\n        });\n        return function (_x) {\n          return _ref2.apply(this, arguments);\n        };\n      }()));\n      return _objectSpread(_objectSpread({}, data), {}, {\n        results: pokemonWithSprites\n      });\n    } catch (error) {\n      console.error('Could not fetch Pokémon list:', error);\n      throw error;\n    }\n  });\n  return function getPokemonList() {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var getPokemonDetails = function () {\n  var _ref3 = _asyncToGenerator(function* (name) {\n    try {\n      var response = yield fetch(`${BASE_URL}/pokemon/${name}`);\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return yield response.json();\n    } catch (error) {\n      console.error(`Could not fetch details of Pokémon ${name}:`, error);\n      throw error;\n    }\n  });\n  return function getPokemonDetails(_x2) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var getPokemonByName = function () {\n  var _ref4 = _asyncToGenerator(function* (name) {\n    var url = `https://pokeapi.co/api/v2/pokemon/${name}`;\n    try {\n      var response = yield fetch(url);\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      var pokemonData = yield response.json();\n      return pokemonData;\n    } catch (error) {\n      console.error('Error fetching data: ', error);\n      throw error;\n    }\n  });\n  return function getPokemonByName(_x3) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nexport var getPokemonSprite = function () {\n  var _ref5 = _asyncToGenerator(function* (name) {\n    try {\n      var details = yield getPokemonDetails(name);\n      return details.sprites.front_default;\n    } catch (error) {\n      console.error(`Could not fetch sprite of Pokémon ${name}:`, error);\n      throw error;\n    }\n  });\n  return function getPokemonSprite(_x4) {\n    return _ref5.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["BASE_URL","getPokemonList","_ref","_asyncToGenerator","limit","arguments","length","undefined","offset","response","fetch","ok","Error","data","json","pokemonWithSprites","Promise","all","results","map","_ref2","pokemon","details","getPokemonDetails","name","_objectSpread","sprite","sprites","front_default","_x","apply","error","console","_ref3","_x2","getPokemonByName","_ref4","url","pokemonData","_x3","getPokemonSprite","_ref5","_x4"],"sources":["/Users/valentinbour/Desktop/Git/comin-TestTechnique/src/api/pokeAPI.ts"],"sourcesContent":["const BASE_URL = 'https://pokeapi.co/api/v2';\n\n// Fonction pour obtenir une liste de Pokémon\n\ntype PokemonListResponse = {\n    count: number;\n    next: string | null;\n    previous: string | null;\n    results: {\n      name: string;\n      url: string;\n    }[];\n  };\n\n  export const getPokemonList = async (limit: number = 20, offset: number = 0): Promise<PokemonListResponse> => {\n    try {\n      const response = await fetch(`${BASE_URL}/pokemon?limit=${limit}&offset=${offset}`);\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      const pokemonWithSprites = await Promise.all(data.results.map(async (pokemon: any) => {\n          const details = await getPokemonDetails(pokemon.name);\n          return {\n              ...pokemon,\n              sprite: details.sprites.front_default\n          };\n      }));\n      return {\n          ...data,\n          results: pokemonWithSprites\n      };\n    } catch (error) {\n      console.error('Could not fetch Pokémon list:', error);\n      throw error;\n    }\n};\n\n// Fonction pour obtenir les détails d'un Pokémon spécifique\nexport const getPokemonDetails = async (name: string) => {\n  try {\n    const response = await fetch(`${BASE_URL}/pokemon/${name}`);\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(`Could not fetch details of Pokémon ${name}:`, error);\n    throw error;\n  }\n};\n\nexport const getPokemonByName = async (name: string) => {\n    const url = `https://pokeapi.co/api/v2/pokemon/${name}`;\n    try {\n      const response = await fetch(url);\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const pokemonData = await response.json();\n      return pokemonData;\n    } catch (error) {\n      console.error('Error fetching data: ', error);\n      throw error;\n    }\n  };\n\n  export const getPokemonSprite = async (name: string): Promise<string> => {\n    try {\n      const details = await getPokemonDetails(name);\n      return details.sprites.front_default;\n    } catch (error) {\n      console.error(`Could not fetch sprite of Pokémon ${name}:`, error);\n      throw error;\n    }\n};\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}